{"version":3,"sources":["logo.svg","logoGreen.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","variant","setVariant","useEffect","a","window","dataLayer","push","event","showContent","setTimeout","clearInterval","intervalId","setInterval","currentVariant","google_optimize","get","clearTimeout","abTest","className","src","logoGreen","alt","logo","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAe,MAA0B,iCCA1B,MAA0B,sC,MC4D1BA,MAvDf,WAAgB,IAAD,EACiBC,mBAAS,MAD1B,mBACNC,EADM,KACGC,EADH,KA6Bb,OA1BAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,0DACMC,OAAOC,UADb,gCAEUD,OAAOC,UAAUC,KAAK,CAAEC,MAAO,sBAFzC,OAKQC,EAAcC,YAAW,WAC7BC,cAAcC,GACdV,EAAW,OACV,MAEGU,EAAaC,aAAY,WAC7B,IACMC,EAAiBT,OAAOU,iBAAmBV,OAAOU,gBAAgBC,IADlD,0BAGlBF,IACFZ,EAAWY,GACXH,cAAcC,GACdK,aAAaR,MAEd,KAnBL,4CADc,uBAAC,WAAD,wBAuBdS,KACC,IAGD,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAS,qBAAiBlB,EAA8B,GAApB,mBAA5C,UACe,MAAZA,EACG,qBAAKmB,IAAKC,EAAWF,UAAU,4BAA4BG,IAAI,eAC/D,qBAAKF,IAAKG,EAAMJ,UAAU,WAAWG,IAAI,SAE7C,6BACe,MAAZrB,EACG,2BACA,kCAGN,mBACEkB,UAAU,WACVK,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCnCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc42bb43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logoGreen.e06d68af.svg\";","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport logoGreen from './logoGreen.svg';\nimport './App.css';\n\nfunction App() {\n  const [variant, setVariant] = useState(null);\n\n  useEffect(() => {\n    async function abTest() {\n      if (window.dataLayer) {\n        await window.dataLayer.push({ event: 'optimize.activate' });\n      }\n\n      const showContent = setTimeout(()=> {\n        clearInterval(intervalId);\n        setVariant('0');\n      }, 1500);\n\n      const intervalId = setInterval(() => {\n        const EXPERIMENT_ID = 'o30slX_MQROZiJYFguu9Mg';\n        const currentVariant = window.google_optimize && window.google_optimize.get(EXPERIMENT_ID);\n\n        if (currentVariant) {\n          setVariant(currentVariant);\n          clearInterval(intervalId);\n          clearTimeout(showContent);\n        }\n      }, 100);\n    }\n\n    abTest();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className={`App-header ${!variant ? 'App-header-hide' : ''}`}>\n        {variant === '1'\n          ? <img src={logoGreen} className=\"App-logo App-logo--revert\" alt=\"logo-green\" />\n          : <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        }\n        <h1>\n          {variant === '1'\n            ? 'You see NEW version page'\n            : 'You see ORIGINAL version page'\n          }\n        </h1>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}